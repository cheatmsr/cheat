#include <stdio.h>
// Function declaration/prototype
int binarySearch(int arr[], int low, int high, int key);
// Driver code
int main(void)
{
int n, x, i;
printf("Enter the number of elements in the array: ");
scanf("%d", &n);
int arr[n];
printf("Enter %d elements in the array: \n", n);
for (i = 0; i < n; i++)
{
scanf("%d", &arr[i]);
}
printf("Enter the element to be searched: ");
scanf("%d", &x);
int result = binarySearch(arr, 0, n - 1, x);
(result == -1) ? printf("Element is not present in array")
: printf("Element is present at index %d", result);
return 0;
}
/* A recursive binary search function. It returns location of key
in given array arr[low,.,.,.,.,high] if present, otherwise -1 */
int binarySearch(int arr[], int low, int high, int key)
{
if ( low<=high) {
int mid = (low + high) / 2;
// If the element is present at the middle itself
if (arr[mid] == key)
return mid;
if (arr[mid] > key)
return binarySearch(arr, low, mid - 1, key);
// Else the element can only be present
// in right subarray
return binarySearch(arr, mid + 1, high, key);
}
// We reach here when element is not
// present in array
return -1;
}