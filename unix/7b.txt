#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <sys/stat.h>
#include <unistd.h>

void removeEmptyFiles(const char *path) {
    DIR *dir = opendir(path);
    struct dirent *entry;
    struct stat fileStat;
    char filePath[1024];

    if (!dir) {
        perror("Error opening directory");
        exit(EXIT_FAILURE);
    }

    while ((entry = readdir(dir)) != NULL) {
        snprintf(filePath, sizeof(filePath), "%s/%s", path, entry->d_name);
        if (stat(filePath, &fileStat) < 0) {
            perror("Error getting file status");
            exit(EXIT_FAILURE);
        }

        if (S_ISREG(fileStat.st_mode) && fileStat.st_size == 0) {
            if (unlink(filePath) == 0) {
                printf("Removed empty file: %s\n", entry->d_name);
            } else {
                perror("Error removing file");
            }
        }
    }

    closedir(dir);
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        fprintf(stderr, "Usage: %s <directory>\n", argv[0]);
        exit(EXIT_FAILURE);
    }

    removeEmptyFiles(argv[1]);
    return 0;
}
